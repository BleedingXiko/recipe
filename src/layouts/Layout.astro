---
import Nav from '../components/Nav.astro';
import Theme from '../components/Theme.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<script is:inline>
			// The configured mode is stored in local storage
			const isDarkMode = localStorage.getItem('theme');
		
			// Set theme to 'dark' if darkMode = 'true'
			const theme = isDarkMode === 'dark' ? 'dark' : 'light';
		
			// Put dark class on html tag to enable dark mode
			document.querySelector("html").setAttribute("data-theme", theme);
		
		  </script>
	</head>
	<body>
		<Nav />
		<Theme />
		<slot />
		<Footer />
	</body>
</html>

<style is:global>

:root[data-theme="light"] {
  --text: #031a30;
  --background: #f6fbfe;
  --primary: #459ef2;
  --secondary: #b2d6fa;
  --accent: #0f73d2;
}
:root[data-theme="dark"] {
  --text: #cfe6fc;
  --background: #010609;
  --primary: #0d66ba;
  --secondary: #05294d;
  --accent: #2d92f0;
}


h1{
    text-align: center;
    font-size: 3rem;
    padding-bottom: 20px;
  }
h2{
	text-align: center;
    font-size: 2rem;
    padding-bottom: 20px;
}





body {
	background-color: var(--background);
	color: var(--text);
}

</style>